<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddAllergen" xml:space="preserve">
    <value>Define allergen:</value>
  </data>
  <data name="AddAllergenPatient" xml:space="preserve">
    <value>Add the allergen to the patient:</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Residential address</value>
  </data>
  <data name="AddressError" xml:space="preserve">
    <value>Please enter valid street name</value>
  </data>
  <data name="AddSpecializations" xml:space="preserve">
    <value>Add specialization to the doctor:</value>
  </data>
  <data name="Allergens" xml:space="preserve">
    <value>Allergens</value>
  </data>
  <data name="Apartment" xml:space="preserve">
    <value>Appartment number</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BirthDay" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="BirthDayPlace" xml:space="preserve">
    <value>Place of birth</value>
  </data>
  <data name="Cancel an appointment" xml:space="preserve">
    <value>Cancel an appointment</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Residential city</value>
  </data>
  <data name="CityError" xml:space="preserve">
    <value>Please enter a valid city name.</value>
  </data>
  <data name="Clinic" xml:space="preserve">
    <value>Hello clinic</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Contact" xml:space="preserve">
    <value>Contact phone</value>
  </data>
  <data name="ContactError" xml:space="preserve">
    <value>Please enter valid 
contact phone.</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Doctor" xml:space="preserve">
    <value>Doctor</value>
  </data>
  <data name="Doctors" xml:space="preserve">
    <value>Doctors</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditAllergen" xml:space="preserve">
    <value>Modify the selected allergen:</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="EmailError" xml:space="preserve">
    <value>Please enter valid email.</value>
  </data>
  <data name="Emergency" xml:space="preserve">
    <value>Emergency</value>
  </data>
  <data name="Emergency term" xml:space="preserve">
    <value>Emergency term</value>
  </data>
  <data name="EncounteredProblems" xml:space="preserve">
    <value>Have you encountered any problems?</value>
  </data>
  <data name="Feedback" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="Floor" xml:space="preserve">
    <value>The floor</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="Guest patient" xml:space="preserve">
    <value>Guest patient</value>
  </data>
  <data name="HomePage" xml:space="preserve">
    <value>Home page</value>
  </data>
  <data name="JMBG" xml:space="preserve">
    <value>Personal No.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="Make an appointment" xml:space="preserve">
    <value>Make an appointment</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="Medical record" xml:space="preserve">
    <value>Medical record</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>MENU</value>
  </data>
  <data name="Move an appointment" xml:space="preserve">
    <value>Move an appointment</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameError" xml:space="preserve">
    <value>Please enter a valid name.</value>
  </data>
  <data name="New news" xml:space="preserve">
    <value>New news</value>
  </data>
  <data name="News" xml:space="preserve">
    <value>News</value>
  </data>
  <data name="News text" xml:space="preserve">
    <value>News text:</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="OnlyNumbersError" xml:space="preserve">
    <value>Please enter numbers.</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordError" xml:space="preserve">
    <value>Please enter valid 
password of at least 6 characters.</value>
  </data>
  <data name="Patient" xml:space="preserve">
    <value>Patient</value>
  </data>
  <data name="Patient registration" xml:space="preserve">
    <value>Patient registration</value>
  </data>
  <data name="Patients" xml:space="preserve">
    <value>Patients</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>Rate the application:</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="Remarks" xml:space="preserve">
    <value>Remarks:</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Reports" xml:space="preserve">
    <value>Reports</value>
  </data>
  <data name="Room" xml:space="preserve">
    <value>Room</value>
  </data>
  <data name="Schedule an appointment" xml:space="preserve">
    <value>Schedule an appointment</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search:</value>
  </data>
  <data name="SelectReport" xml:space="preserve">
    <value>Select the report you want to generate:</value>
  </data>
  <data name="Specialization" xml:space="preserve">
    <value>Specialization</value>
  </data>
  <data name="Specializations" xml:space="preserve">
    <value>Specializations</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>Residential state</value>
  </data>
  <data name="StateError" xml:space="preserve">
    <value>Please enter a valid state name.</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Surname" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="SurnameError" xml:space="preserve">
    <value>Please enter a valid surname.</value>
  </data>
  <data name="Term" xml:space="preserve">
    <value>Term</value>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>Terms</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Type of term" xml:space="preserve">
    <value>Type of term</value>
  </data>
  <data name="UCINError" xml:space="preserve">
    <value>Please enter a valid 13-digit UCIN.</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>Unknown error occured.</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UsernameError" xml:space="preserve">
    <value>Please enter valid 
username of 3 to 18 characters.</value>
  </data>
  <data name="WeeklyReport" xml:space="preserve">
    <value>Weekly report on scheduled operations and examinations</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
</root>